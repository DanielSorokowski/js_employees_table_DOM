{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","tableBody","tableRows","querySelectorAll","users","addEventListener","e","element","target","tagName","getAttribute","forEach","dataSort","removeAttribute","sortTable","innerText","createTable","setAttribute","tr","push","Name","children","Position","Office","Age","Number","Salary","replace","table","value","order","sort","a","b","localeCompare","Error","innerHTML","tableElement","createElement","salary","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","appendChild","active","classList","remove","toggle","createForm","newForm","add","body","addTableButton","addForm","formValues","length","pushNotification","Object","values","every","String","currentValue","posTop","posRight","title","description","type","notification","top","right","setTimeout","removeChild","clickEvent","td","includes","input","parentElement","keyEvent","keyCode"],"mappings":";AAAA,aAEA,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAYF,SAASC,cAAc,SACnCE,EAAYD,EAAUE,iBAAiB,MACvCC,EAAQ,GAEdN,EAAUO,iBAAiB,QAAS,SAAAC,GAC5BC,IAAAA,EAAUD,EAAEE,OAEdD,GAAoB,OAApBA,EAAQE,QAAkB,CACxB,IAACF,EAAQG,aAAa,aACNX,SAASI,iBAAiB,eAElCQ,QAAQ,SAAAC,GAChBA,EAASC,gBAAgB,eAIa,QAAtCN,EAAQG,aAAa,cACvBI,EAAUV,EAAOG,EAAQQ,UAAW,QACpCC,EAAYZ,GACZG,EAAQU,aAAa,YAAa,UAElCH,EAAUV,EAAOG,EAAQQ,UAAW,OACpCC,EAAYZ,GACZG,EAAQU,aAAa,YAAa,WAKxCf,EAAUS,QAAQ,SAAAO,GAChBd,EAAMe,KACJ,CACEC,KAAMF,EAAGG,SAAS,GAAGN,UACrBO,SAAUJ,EAAGG,SAAS,GAAGN,UACzBQ,OAAQL,EAAGG,SAAS,GAAGN,UACvBS,IAAKC,OAAOP,EAAGG,SAAS,GAAGN,WAC3BW,OAAQD,OAAOP,EAAGG,SAAS,GAAGN,UAAUY,QAAQ,QAAS,SAK/D,IAAMb,EAAY,SAACc,EAAOC,EAAOC,GACvBA,OAAAA,GACD,IAAA,MACHF,EAAMG,KAAK,SAACC,EAAGC,GACT,GAAoB,iBAAbD,EAAEH,GACJG,OAAAA,EAAEH,GAASI,EAAEJ,GACf,GAAwB,iBAAbG,EAAEH,GACXG,OAAAA,EAAEH,GAAOK,cAAcD,EAAEJ,IAG5B,MAAA,IAAIM,MAAM,wBAGlB,MAGG,IAAA,OACHP,EAAMG,KAAK,SAACC,EAAGC,GACT,GAAoB,iBAAbD,EAAEH,GACJI,OAAAA,EAAEJ,GAASG,EAAEH,GACf,GAAwB,iBAAbG,EAAEH,GACXI,OAAAA,EAAEJ,GAAOK,cAAcF,EAAEH,IAG5B,MAAA,IAAIM,MAAM,wBAElB,MAGF,QACQ,MAAA,IAAIA,MAAM,iBAKhBnB,EAAc,SAACY,GACnB3B,EAAUmC,UAAY,GAEtBR,EAAMjB,QAAQ,SAAAJ,GACN8B,IAAAA,EAAetC,SAASuC,cAAc,MACtCC,EAAShC,EAAQmB,OAAOc,eAAe,QAAS,CACpDC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IAGzBP,EAAaD,UACJ7B,OAAAA,OAAAA,EAAQa,KACTb,qBAAAA,OAAAA,EAAQe,SACRf,qBAAAA,OAAAA,EAAQgB,OACRhB,qBAAAA,OAAAA,EAAQiB,IACRe,qBAAAA,OAAAA,EALR,SAQAtC,EAAU4C,YAAYR,MAI1BnC,EAAUS,QAAQ,SAAAJ,GAChBA,EAAQF,iBAAiB,QAAS,WAChBN,SAASI,iBAAiB,WAElCQ,QAAQ,SAAAmC,GACdA,EAAOC,UAAUC,OAAO,YAG1BzC,EAAQwC,UAAUE,OAAO,cAI7B,IAAMC,EAAa,WACXC,IAAAA,EAAUpD,SAASuC,cAAc,QAEvCa,EAAQJ,UAAUK,IAAI,qBAEtBD,EAAQf,UAAR,w6BA+BArC,SAASsD,KAAKR,YAAYM,IAG5BD,IAEA,IAAMI,EAAiBvD,SAASC,cAAc,iBACxCuD,EAAUxD,SAASC,cAAc,sBAEvCsD,EAAejD,iBAAiB,QAAS,WACjCmD,IAAAA,EAAa,CACjBpC,KAAMmC,EAAQvD,cAAc,sBAAsB6B,MAClDP,SAAUiC,EAAQvD,cAAc,0BAA0B6B,MAC1DN,OAAQgC,EAAQvD,cAAc,yBAAyB6B,MACvDL,IAAKC,OAAO8B,EAAQvD,cAAc,qBAAqB6B,OACvDH,OAAQD,OAAO8B,EAAQvD,cAAc,wBAAwB6B,QAG3D2B,EAAWpC,KAAKqC,OAAS,EAC3BC,EACE,GACA,GACeF,eAAAA,OAAAA,EAAWpC,MAC1B,wBACA,SAEOoC,EAAWhC,IAAM,IAAMgC,EAAWhC,IAAM,GACjDkC,EACE,GACA,GACcF,cAAAA,OAAAA,EAAWhC,KACzB,qCACA,SAEOmC,OAAOC,OAAOJ,GAAYK,MAAM,SAAAhC,GACzCiC,OAAAA,OAAOjC,GAAO4B,OAAS,KAEvBrD,EAAMe,KAAKqC,GACXxC,EAAYZ,GAEZsD,EACE,GACA,GAEA,UAAA,8BACA,YAGFA,EAAiB,GAAI,GAAa,QAAA,4BAA6B,WAInE,IAsBIK,EAtBEL,EAAmB,SAACM,EAAQC,EAAUC,EAAOC,EAAaC,GACxDC,IAAAA,EAAetE,SAASuC,cAAc,OAE5C+B,EAAatB,UAAUK,IAAvB,gBACAiB,EAAatB,UAAUK,IAAIgB,GAC3BC,EAAapD,aAAa,UAAW,gBAErCoD,EAAajC,UACU8B,qBAAAA,OAAAA,EAChBC,kBAAAA,OAAAA,EAFP,QAKAE,EAAa5B,MAAM6B,IAASN,GAAAA,OAAAA,EAA5B,MACAK,EAAa5B,MAAM8B,MAAWN,GAAAA,OAAAA,EAA9B,MAEAlE,SAASsD,KAAKR,YAAYwB,GAE1BG,WAAW,WACTzE,SAASsD,KAAKoB,YAAYJ,IACzB,MAKLpE,EAAUI,iBAAiB,WAAY,SAACqE,GAChClE,IAAAA,EAASkE,EAAWlE,OACdP,EAAUE,iBAAiB,MAEnCQ,QAAQ,SAAAgE,GACNA,GAAAA,EAAGvC,UAAUwC,SAAS,SAAU,CAC5BC,IAAAA,EAAQF,EAAG3E,cAAc,SAE3B6E,EAAMhD,MACR8C,EAAGvC,UAAYyC,EAAMhD,MAErB8C,EAAGvC,UAAY2B,KAKE,OAAnBvD,EAAOC,UACTsD,EAAevD,EAAOO,UACtBP,EAAO4B,UAAY,uBAGE,UAAnB5B,EAAOC,UACTD,EAAOH,iBAAiB,OAAQ,WAC1BG,EAAOqB,MAAM4B,QAAU,EACzBjD,EAAOsE,cAAc1C,UAAY2B,EAEjCvD,EAAOsE,cAAc1C,UAAY5B,EAAOqB,QAI5CrB,EAAOH,iBAAiB,UAAW,SAAC0E,GACT,KAArBA,EAASC,UACPxE,EAAOqB,MAAM4B,QAAU,EACzBjD,EAAOsE,cAAc1C,UAAY2B,EAEjCvD,EAAOsE,cAAc1C,UAAY5B,EAAOqB","file":"main.893e621c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nconst tableRows = tableBody.querySelectorAll('tr');\nconst users = [];\n\ntableHead.addEventListener('click', e => {\n  const element = e.target;\n\n  if (element.tagName === 'TH') {\n    if (!element.getAttribute('data-sort')) {\n      const dataSorts = document.querySelectorAll('[data-sort]');\n\n      dataSorts.forEach(dataSort => {\n        dataSort.removeAttribute('data-sort');\n      });\n    }\n\n    if (element.getAttribute('data-sort') === 'ASC') {\n      sortTable(users, element.innerText, 'DESC');\n      createTable(users);\n      element.setAttribute('data-sort', 'DESC');\n    } else {\n      sortTable(users, element.innerText, 'ASC');\n      createTable(users);\n      element.setAttribute('data-sort', 'ASC');\n    }\n  }\n});\n\ntableRows.forEach(tr => {\n  users.push(\n    {\n      Name: tr.children[0].innerText,\n      Position: tr.children[1].innerText,\n      Office: tr.children[2].innerText,\n      Age: Number(tr.children[3].innerText),\n      Salary: Number(tr.children[4].innerText.replace(/[$,]/g, '')),\n    }\n  );\n});\n\nconst sortTable = (table, value, order) => {\n  switch (order) {\n    case 'ASC': {\n      table.sort((a, b) => {\n        if (typeof a[value] === 'number') {\n          return a[value] - b[value];\n        } else if (typeof a[value] === 'string') {\n          return a[value].localeCompare(b[value]);\n        }\n\n        throw new Error('wrong typeof value');\n      });\n\n      break;\n    }\n\n    case 'DESC': {\n      table.sort((a, b) => {\n        if (typeof a[value] === 'number') {\n          return b[value] - a[value];\n        } else if (typeof a[value] === 'string') {\n          return b[value].localeCompare(a[value]);\n        }\n\n        throw new Error('wrong typeof value');\n      });\n      break;\n    }\n\n    default: {\n      throw new Error('wrong order');\n    }\n  }\n};\n\nconst createTable = (table) => {\n  tableBody.innerHTML = '';\n\n  table.forEach(element => {\n    const tableElement = document.createElement('tr');\n    const salary = element.Salary.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    });\n\n    tableElement.innerHTML = (\n      `<td>${element.Name}</td>\n      <td>${element.Position}</td>\n      <td>${element.Office}</td>\n      <td>${element.Age}</td>\n      <td>${salary}</td>`\n    );\n\n    tableBody.appendChild(tableElement);\n  });\n};\n\ntableRows.forEach(element => {\n  element.addEventListener('click', () => {\n    const actives = document.querySelectorAll('.active');\n\n    actives.forEach(active => {\n      active.classList.remove('active');\n    });\n\n    element.classList.toggle('active');\n  });\n});\n\nconst createForm = () => {\n  const newForm = document.createElement('form');\n\n  newForm.classList.add('new-employee-form');\n\n  newForm.innerHTML = (\n    `<label>\n      Name:\n      <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n    </label>\n    <label>\n      Position:\n      <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n    </label>\n    <label>\n      Office:\n      <select name='office' data-qa=\"office\" required>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>\n      Age:\n      <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n    </label>\n    <label>\n      Salary:\n      <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n    </label>\n    <button type='button' class='add-to-table'>Save to table</button>`\n  );\n\n  document.body.appendChild(newForm);\n};\n\ncreateForm();\n\nconst addTableButton = document.querySelector('.add-to-table');\nconst addForm = document.querySelector('.new-employee-form');\n\naddTableButton.addEventListener('click', () => {\n  const formValues = {\n    Name: addForm.querySelector('input[name=\"name\"]').value,\n    Position: addForm.querySelector('input[name=\"position\"]').value,\n    Office: addForm.querySelector('select[name=\"office\"]').value,\n    Age: Number(addForm.querySelector('input[name=\"age\"]').value),\n    Salary: Number(addForm.querySelector('input[name=\"salary\"]').value),\n  };\n\n  if (formValues.Name.length < 4) {\n    pushNotification(\n      10,\n      10,\n      `Wrong name: ${formValues.Name}`,\n      'Your name is to short',\n      'error'\n    );\n  } else if (formValues.Age < 18 || formValues.Age > 90) {\n    pushNotification(\n      10,\n      10,\n      `Wrong Age: ${formValues.Age}`,\n      'Your age should be between 18 - 90',\n      'error'\n    );\n  } else if (Object.values(formValues).every(value => (\n    String(value).length > 0\n  ))) {\n    users.push(formValues);\n    createTable(users);\n\n    pushNotification(\n      10,\n      10,\n      `Success`,\n      'New employee added to table',\n      'success'\n    );\n  } else {\n    pushNotification(10, 10, `Error`, 'all inputs must be filled', 'error');\n  }\n});\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const notification = document.createElement('div');\n\n  notification.classList.add(`notification`);\n  notification.classList.add(type);\n  notification.setAttribute('data-qa', 'notification');\n\n  notification.innerHTML = (\n    `<h2 class='title'>${title}</h2>\n    <p>${description}</p>`\n  );\n\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    document.body.removeChild(notification);\n  }, 2000);\n};\n\nlet currentValue;\n\ntableBody.addEventListener('dblclick', (clickEvent) => {\n  const target = clickEvent.target;\n  const tds = tableBody.querySelectorAll('td');\n\n  tds.forEach(td => {\n    if (td.innerHTML.includes('input')) {\n      const input = td.querySelector('input');\n\n      if (input.value) {\n        td.innerHTML = input.value;\n      } else {\n        td.innerHTML = currentValue;\n      }\n    }\n  });\n\n  if (target.tagName === 'TD') {\n    currentValue = target.innerText;\n    target.innerHTML = '<input type=\"text\">';\n  }\n\n  if (target.tagName === 'INPUT') {\n    target.addEventListener('blur', () => {\n      if (target.value.length <= 0) {\n        target.parentElement.innerHTML = currentValue;\n      } else {\n        target.parentElement.innerHTML = target.value;\n      }\n    });\n\n    target.addEventListener('keydown', (keyEvent) => {\n      if (keyEvent.keyCode === 13) {\n        if (target.value.length <= 0) {\n          target.parentElement.innerHTML = currentValue;\n        } else {\n          target.parentElement.innerHTML = target.value;\n        }\n      }\n    });\n  }\n});\n"]}